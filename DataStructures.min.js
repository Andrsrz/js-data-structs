function addNode(e){let t=[];return{value:e,children:t,addChild(e){let r=addNode(e);return t.push(r),r}}}function Tree(e){let t=addNode(e);return{root:t,display(){var e="";return function t(r,n){e+="   ".repeat(n)+r.value+" ➞ \n";r.children.length&&r.children.forEach(e=>{t(e,n+1)})}(t,0),e}}}function addBinaryNode(e){return{value:e,left:null,right:null,addChild(e){let t=addBinaryNode(e);return null===this.left?this.left=t:this.right=t,t},addLeftChild(e){let t=addBinaryNode(e);return this.left=t,t},addRightChild(e){let t=addBinaryNode(e);return this.right=t,t}}}exports.addNode=addNode,exports.Tree=Tree,exports.addBinaryNode=addBinaryNode;let order={pre:"pre",post:"post",in:"in"};function BinaryTree(e){let t=addBinaryNode(e);return{root:t,display(e){let r="";function n(e){null!=e&&(n(e.left),n(e.right),r+=e.value+" ")}return"post"==e?n(t):"pre"==e?function(e){if(null==e)return;r+=e.value+" ",n(e.left),n(e.right)}(t):function e(t){if(null==t)return;e(t.left),r+=t.value+" ",e(t.right)}(t),r}}}function addBinarySearchNode(e){return{value:e,left:null,right:null,insert(e){let t=addBinarySearchNode(e);return function t(r,n){if(null==r)return n;e>r.value?r.right=t(r.right,n):r.left=t(r.left,n);return r}(this,t),t}}}function BinarySearchTree(e){let t=addBinarySearchNode(e);return{root:t,display(e){let r="";function n(e){null!=e&&(n(e.left),n(e.right),r+=e.value+" ")}return"post"==e?n(t):"pre"==e?function(e){if(null==e)return;r+=e.value+" ",n(e.left),n(e.right)}(t):function e(t){if(null==t)return;e(t.left),r+=t.value+" ",e(t.right)}(t),r},search(e){return function t(r){if(e>r.value)t(r.right);else{if(e==r.value)return r;t(r.left)}}(t),-1}}}function Stack(){let e=[];return{stack:e,push(t){e.push(t)},pop:()=>e.pop(),peek:()=>e[e.length-1],isEmpty:()=>0==e.length}}function Queue(){let e=[];return{queue:e,enqueue(t){e.push(t)},dequeue:()=>e.shift(),peek:()=>e[0],isEmpty:()=>0==e.length}}function PriorityQueue(){let e=[];return{queue:e,enqueue(t,r){e.push({value:t,key:r}),HeapSort(e)},dequeue:()=>e.shift(),peek:()=>e[0].value,isEmpty:()=>0==e.length}}function createGraphNode(e){let t=[];return{value:e,adjacentNodes:t,addAdjacent(e){t.push(e)}}}function Graph(e=!1,t=!1){let r=[],n=[];return{directed:e,weighted:t,nodes:r,edges:n,addNode(e){r.push(createGraphNode(e))},getNode:e=>r.find(t=>t.value===e),addEdge(e,t,r=1){void 0===this.getNode(e)&&this.addNode(e),void 0===this.getNode(t)&&this.addNode(t);let l=this.getNode(e),i=this.getNode(t);l.addAdjacent(i),n.push([l,i,r]),this.directed||(i.addAdjacent(l),n.push([i,l,r]))},BFS(e){let t=[],n=this.getNode(e),l={};r.forEach(e=>{l[e.value]=!1}),l[n.value]=!0;let i=Queue();for(i.enqueue(n);!i.isEmpty();){let e=i.dequeue();t.push(e.value),e.adjacentNodes.forEach(e=>{l[e.value]||(i.enqueue(e),l[e.value]=!0)})}return t},DFS(e){let t=[],n=this.getNode(e),l={};return r.forEach(e=>{l[e.value]=!1}),function e(r,n){n[r.value]=!0;t.push(r.value);r.adjacentNodes.forEach(t=>{n[t.value]||e(t,n)})}(n,l),t},fromAdjMatrix(t){if(t.length!=t[0].length)return null;for(let r=0;r<t.length;r++)if(e)for(let e=0;e<t[r].length;e++)0!=t[r][e]&&(this.weighted?this.addEdge(r,e,t[r][e]):this.addEdge(r,e));else for(let e=r+1;e<t[r].length;e++)0!=t[r][e]&&(this.weighted?this.addEdge(r,e,t[r][e]):this.addEdge(r,e))},topologicalSort(){if(!this.directed)return"Toplogical sort can only be done on Directed Acyclic Graphs";let e=[],t={};return r.forEach(e=>{t[e.value]=!1}),r.forEach(r=>{t[r.value]||function r(n){t[n.value]=!0;n.adjacentNodes.forEach(e=>{t[e.value]||r(e)});e.push(n.value)}(r)}),e.reverse()},dijkstra(e){let t=r.length,l={},i={};r.forEach(e=>{l[e.value]=Number.MAX_SAFE_INTEGER,i[e.value]=!1}),console.log(n.length),l[this.getNode(e).value]=0;for(let e=0;e<t;e++){let e=a(l,i);i[e.value]=!0,r.forEach(t=>{let r=0;for(const l of n)if(l[0].value==e.value&&l[1].value==t.value||l[1].value==e.value&&l[2].value==t.value){r=l[2];break}!i[t.value]&&0!=r&&l[e.value]!=Number.MAX_SAFE_INTEGER&&l[e.value]+r<l[t.value]&&(l[t.value]=l[e.value]+r)})}return l;function a(e,t){let n=Number.MAX_SAFE_INTEGER,l=-1;return r.forEach(r=>{0==t[r.value]&&e[r.value]<=n&&(n=e[r.value],l=r)}),l}},findEdgeWeight(e,t){n.forEach(r=>{if(r[0].value==e&&r[1].value==t||r[1].value==e&&r[2].value==t)return r[2]})}}}exports.order=order,exports.BinaryTree=BinaryTree,exports.addBinarySearchNode=addBinarySearchNode,exports.BinarySearchTree=BinarySearchTree,exports.Stack=Stack,exports.Queue=Queue,exports.PriorityQueue=PriorityQueue,exports.createGraphNode=createGraphNode,exports.Graph=Graph;let alphabetSize=26;function createTrieNode(){return{endOfWord:!1,children:Array(alphabetSize).fill(null)}}function Trie(){let e=createTrieNode();return{root:e,insertWord(t){let r=t.length,n=e;for(let e=0;e<r;e++){let r=t.charCodeAt(e)-"a".charCodeAt(0);null===n.children[r]&&(n.children[r]=createTrieNode()),n=n.children[r]}n.endOfWord=!0},search(t){let r=t.length,n=e;for(let e=0;e<r;e++){let r=t.charCodeAt(e)-"a".charCodeAt(0);if(null===n.children[r])return!1;n=n.children[r]}return null!==n&&n.endOfWord}}}function powerSet(e,t=0,r=""){let n=[],l=e.length;return function t(r=0,i=""){if(r==l)return void n.push(i.split(""));t(r+1,i+e[r]);t(r+1,i)}(0,""),n}function permutations(e){let t=e.length,r="",n=[];!function t(n,l){if(1==l)return void(r+=n.join("")+" ");for(let r=0;r<l;r++)if(t(n,l-1),l%2==0){let t=e[r];e[r]=e[l-1],e[l-1]=t}else{let t=e[0];e[0]=e[l-1],e[l-1]=t}}(e,t);let l=r.split(" ");return l.slice(0,l.length-1).forEach(e=>{n.push(e.split(""))}),n}function createNode(e){return{value:e,next:null}}function LinkedList(){return{head:null,tail:null,length:0,isEmpty(){return 0==this.length},push(e){let t=createNode(e);return null==this.head?(this.head=t,this.tail=t,this.length++,t):(this.tail.next=t,this.tail=t,this.length++,t)},insertAt(e,t){if(e<0||e>this.length)return null;if(e==this.length){return this.push(t)}let r=createNode(t);if(0==e)return r.next=this.head,this.head=r,this.length++,r;let n=this.head,l=0;for(;e-1!=l;)n=n.next,l++;return r.next=n.next,n.next=r,this.length++,r},pop(){let e=this.tail;if(this.tail==this.head)return this.head=null,this.tail=null,this.length--,e;let t=this.head;for(;t.next!=e;)t=t.next;return t.next=null,this.tail=t,this.length--,e},get(e){if(e<0||e>=this.length)return null;if(0==e)return this.head;let t=this.head,r=0;for(;e!=r;)t=t.next,r++;return t},delete(e){if(e<0||e>=this.length)return null;if(0==e){let e=this.head;return this.head=this.head.next,this.length--,e}let t=this.head,r=0;for(;e-1!=r;)t=t.next,r++;let n=t.next;return n==this.tail&&(this.tail=t),t.next=t.next.next,this.length--,n},display(){let e=this.head,t="";for(;null!=e.next;)t+=e.value.toString()+" ➞ ",e=e.next;return t+=e.value.toString()}}}function heapify(e,t,r){let n=r,l=2*r+1,i=2*r+2;if(i<t&&e[r].key<e[i].key&&(n=i),l<t&&e[n].key<e[l].key&&(n=l),n!=r){var a=e[r];e[r]=e[n],e[n]=a,heapify(e,t,n)}}function heapifyMin(e,t,r){let n=r,l=2*r+1,i=2*r+2;if(i<t&&e[r].key>e[i].key&&(n=i),l<t&&e[n].key>e[l].key&&(n=l),n!=r){var a=e[r];e[r]=e[n],e[n]=a,heapifyMin(e,t,n)}}function HeapSort(e,t=!1){let r=e.length;for(let n=parseInt(r/2-1);n>-1;n--)t?heapifyMin(e,r,n):heapify(e,r,n);for(let n=r-1;n>0;n--){let r=e[n];e[n]=e[0],e[0]=r,t?heapifyMin(e,n,0):heapify(e,n,0)}}function zSearch(e,t){let r=t+"$"+e,n=r.length,l=t.length,i=[],a=function(e){let t=e.length,r=Array(t);r[0]=0;let n=0,l=0;for(let i=1;i<t;i++)if(i>l){for(n=i,l=i;l<t&&e[l-n]==e[l];)l++;r[i]=l-n,l--}else{let a=i-n;if(r[a]<l-i+1)r[i]=r[a];else{for(n=i;l<t&&e[l-n]==e[l];)l++;r[i]=l-n,l--}}return r}(r);for(let e=0;e<n;e++)a[e]==l&&i.push(e-l-1);return i}function Nqueens(e){let t=Array.from(Array(e),()=>Array.from(Array(e),()=>0));function r(r,n){for(i=0;i<n;i++)if(1==t[r][i])return!1;for(i=r,j=n;i>=0&&j>=0;i--,j--)if(1==t[i][j])return!1;for(i=r,j=n;j>=0&&i<e;i++,j--)if(1==t[i][j])return!1;return!0}return function n(l){if(l>=e)return!0;for(let i=0;i<e;i++)if(r(i,l)){if(t[i][l]=1,n(l+1))return!0;t[i][l]=0}return!1}(0),t}function LZW(e=null){let t;return t=e||Array.apply(null,Array(95)).map(function(e,t){return String.fromCharCode(t+32)}).join(""),{encode(e){let r={},n=0;t.split("").forEach(e=>{r[e]=n,n+=1});let l,i=e.split(""),a=i[0],u=[];for(let e=1;e<i.length;e++)l=i[e],null!=r[a+l]?a+=l:(u.push(r[a]),r[a+l]=n,n+=1,a=l);return u.push(r[a]),u},decode(e){let r={},n=0;t.split("").forEach(e=>{r[n]=e,n+=1});let l,i,a=e[0],u=r[a],o=u[0];for(let t=1;t<e.length;t++)l=e[t],null==r[l]?(i=r[a],i+=o):i=r[l],u+=i,o=i[0],r[n]=r[a]+o,n+=1,a=l;return u}}}function fisherYates(e){for(let t=e.length-1;t>0;t--){let r=Math.floor(Math.random()*(t+1));[e[t],e[r]]=[e[r],e[t]]}return e}function BinarySearch(e,t,r,n){if(r>=t){var l=t+parseInt((r-t)/2);return e[l]==n?l:e[l]>n?BinarySearch(e,t,l-1,n):BinarySearch(e,l+1,r,n)}return-1}function RabinKarp(e,t,r,n){var l=e.length,i=t.length,a=0,u=0,o=0,h=1,d=[];for(let e=0;e<l-1;e++)h=h*n%r;for(let i=0;i<l;i++)u=(n*u+e[i].charCodeAt(0))%r,o=(n*o+t[i].charCodeAt(0))%r;for(let f=0;f<=i-l;f++){if(u==o){for(a=0;a<l&&t[f+a].charCodeAt(0)==e[a].charCodeAt(0);a++);a==l&&d.push(f)}f<i-l&&(o=(n*(o-t[f].charCodeAt(0)*h)+t[f+l].charCodeAt(0))%r)<0&&(o+=r)}return d}exports.createTrieNode=createTrieNode,exports.Trie=Trie,exports.powerSet=powerSet,exports.permutations=permutations,exports.createNode=createNode,exports.LinkedList=LinkedList,exports.heapify=heapify,exports.heapifyMin=heapifyMin,exports.HeapSort=HeapSort,exports.zSearch=zSearch,exports.Nqueens=Nqueens,exports.LZW=LZW,exports.fisherYates=fisherYates,exports.BinarySearch=BinarySearch,exports.RabinKarp=RabinKarp;